---
const url = new URL(Astro.request.url);
const teamId = url.searchParams.get('teamId') ?? 0;
const teamName = url.searchParams.get('teamName') ?? 'Unknown Team';


const response = await fetch(`http://localhost:4321/api/teamDetails?teamId=${teamId}&teamName=${encodeURIComponent(teamName)}`);
const {status, players, message} = await response.json();
const loginStatus = await Astro.session?.get('user');
let favoriteStatus = false;
if (loginStatus) {
    const favoriteStatusResponse = await fetch(`http://localhost:4321/api/leagueTeam/leagueTeamStatus?teamId=${teamId}`);
    const favoriteData = await favoriteStatusResponse.json();
    favoriteStatus = favoriteData.favoriteStatus;
}

// Define Player type
type Player = {
    playerId: number;
    link: string;
    name: string;
};
---

<html lang="en">
<head>
    <title>Football Team Info</title>
</head>
<body>

<h1>League Info: {teamName}</h1>

{status === "error" || !players?.length ? (
        <p>{message || "No players available"}</p>
) : (
        <ul>
            {players.map((player: Player) => (
                    <li>
                        <a href={`/football/playerDetails?teamName=${teamName}&playerId=${player.playerId}&playerName=${player.name}`}>
                            {player.name}
                        </a>
                    </li>
            ))}
        </ul>
)}


{loginStatus && (
    favoriteStatus ? (
            <a href={`/leagueTeam/remove?teamId=${teamId}`} class="base-button">
                Remove from Favorites
            </a>
    ) : (
            <a href={`/leagueTeam/add?teamId=${teamId}`} class="base-button">
                Add to Favorites
            </a>
    )
)}
)}


{/*
<a href={`/?page=shop&teamId=${players.teamID}&teamName=${encodeURIComponent(players.teamName)}`} class="button">View Products</a>
<a href={`/club_shop?teamName=${players.teamName}&teamId=${players.teamID}`}>NEW SHOP</a>
*/}

</body>
</html>
