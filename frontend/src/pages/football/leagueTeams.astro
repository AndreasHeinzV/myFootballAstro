---
const url = new URL(Astro.request.url);
const leagueId = url.searchParams.get('leagueId') ?? '';
const leagueName = url.searchParams.get('leagueName') ?? 'Unknown League';

const response = await fetch(`http://localhost:4321/api/leagueTeams?leagueId=${leagueId}&leagueName=${encodeURIComponent(leagueName)}`);
const { status, data, message } = await response.json();
type Team = {
    position: number;
    name: string;
    teamId: number;
    playedGames: number;
    won: number;
    draw: number;
    lost: number;
    points: number;
    goalsFor: number;
    goalsAgainst: number;
    goalDifference: number;
};

---
<html>
<head>
    <title>Football League Info</title>
</head>
<body>
<h1>League Info: {leagueName}</h1>

{status === "error" || !data?.length ? (
        <p>{message || "No teams available for this league"}</p>
) : (
        <table>
            <tr>
                <th>Position</th>
                <th>Team</th>
                <th>Played</th>
                <th>Won</th>
                <th>Draw</th>
                <th>Lost</th>
                <th>Points</th>
                <th>GoalsFor</th>
                <th>GoalsAgainst</th>
                <th>GoalsDifference</th>
            </tr>
            {data.map((team: Team) => (
                    <tr>
                        <td>{team.position}</td>
                        <td><a href={`/football/teamDetails?teamId=${team.teamId}&teamName=${encodeURIComponent(team.name)}`}>{team.name}</a></td>
                        <td>{team.playedGames}</td>
                        <td>{team.won}</td>
                        <td>{team.draw}</td>
                        <td>{team.lost}</td>
                        <td>{team.points}</td>
                        <td>{team.goalsFor}</td>
                        <td>{team.goalsAgainst}</td>
                        <td>{team.goalDifference}</td>
                    </tr>
            ))}
        </table>
)}
</body>
</html>
