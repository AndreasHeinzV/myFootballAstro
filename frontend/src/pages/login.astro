---
import Layout from "../layouts/Layout.astro";
const token = await Astro.session?.get('token');
if (token !== null) {
    console.log(token);
   return Astro.redirect('/');
}
---


<Layout>

<h2>Login</h2>
<div id="error-message" class="error"></div>

<form id="login-form" action="/api/login" method="POST">
    <label for="email">Email:</label>
    <input
            type="email"
            id="email"
            name="email"
            placeholder="Enter your email"
            required
    />

    <label for="password">Password:</label>
    <input
            type="password"
            id="password"
            name="password"
            placeholder="Enter your password"
            required
    />


    <button type="submit">Submit</button>
</form>
</Layout>

<script>

    const errorMessageElement = document.getElementById('error-message')!;

    document.querySelector('form')?.addEventListener('submit', async (e) => {
        e.preventDefault();
        errorMessageElement.innerHTML = '';

        const formElement = e.target as HTMLFormElement;

        const response = await fetch(
            formElement.action,
            {
                method: formElement.method,
                body: new FormData(formElement)
            }
        );


        try {
            if (response.redirected) {
                errorMessageElement.innerHTML = "Login successful! redirect in 5 seconds.";
                setTimeout(() => {
                    window.location.assign(response.url);
                }, 5000)


            } else {
                const textResponse = await response.text();
                const data = JSON.parse(textResponse);
                errorMessageElement.innerText = data.message;
                errorMessageElement.scrollIntoView({behavior: 'smooth', block: 'center'});
            }
        } catch (e) {

            console.error("Error parsing JSON:", e);
            errorMessageElement.innerText = `Unexpected response format:}`;
            errorMessageElement.scrollIntoView({behavior: 'smooth', block: 'center'});
        }
    });
</script>